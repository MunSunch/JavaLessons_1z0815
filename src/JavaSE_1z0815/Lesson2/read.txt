    Тип данных - это множество допустимых значений этих данных, а также совокупность операций над ним. Подразделяются на
примитивные и ссылочные типы.
    Переменная - именованная область данных, адрес которой можно использовать для осуществления доступа к данным и манипуляций
над ними в ходе выполнения программы.
    В Java всего 8 основных типов данных:
        Numeric:
            Целочисленные:
                1)byte
                2)short
                3)int
                4)long
            Рациональные:
                5)float
                6)double
        7)Character
        8)Boolean
    Числовые типы указаны по возрастанию размера типа. Так short может вместить в себя byte, int-short, long-все числовые типы,
кроме того, float может вместить в себя byte, short, int-размерность позволяет, double-все типы. включая long.
Такое многообразие позволяет контролировать память за счет рационального выбора типа данных.
    *По умолчанию любое написанное целое число воспринимается компилятором как тип int, а рациональное цисло - double,
поэтому при написании целого числа, находящегося вне диапазона типа int(от -32_000_000 до 32_000_000), возникнет ошибка.
Чтобы её избежать, следует прописывать L или l после числа(смотри Test1). То же самое касается и float.*
    Значение переменной типа Character(char) задается в '' символом либо позицией этого символа из Юникода. Последнее
записывается в десятичной СС или шестнадцатиричной СС(смотри Test1).
    Начиная с Java 10, добавляется неопределенный тип данных var. Тип Данных определяется после инициализации(Test1).
Переменная с var обязательно должна быть инициализирована.
    Рассмотрим запись одного и того же числа из разных СС:
        1)десятичная(и так понятно):
            21
        2)двоичная:
                21 в двоичной 10101, тогда
            0B10101 или 0b10101
        3)восьмеричная:
                21 в восьмеричной 25, тогда
            025
        4)шестнадцатириичная:
                21 в шестнадцатиричной 15, тогда
            0X15 или 0x15
    Underscore - это символ "_", используемый для повышения читаемости кода, разделяет цифры внутри числа, например,
1_000_000_000.
    Underscore запрещается использовать в следующих ситуациях:
        1) В начале и конце числа(логично);
        2) До и после точки в дробных числах;
        3) До и после символов "F"/"f", "L"/"l";
        4) При записи числа в СС, перечисленных выше, до и после символов "X"/"x", "B"/"b". Исключение: в восьмеричной СС
ставить поле нуля - 0_71;
