    String
    Все классы из пакета java.lang импортируются по умолчанию, поэтому возможно использование сокращенного имени класса.
    Этот класса уникален тем, что имеет два способа создания: с помощью конструктора и неявного создания двойными кавычками.
При первом способе созданный объект помещается в heap, область в памяти для всех объектов. При втором - JVM обращается
к string pool или constant pool, области в памяти для всех строк, создаваемых таким способом, и, если такого объекта там нет,
то создает его, если же он есть, то берет оттуда. Таким образом, при первом способе объекты даже с одинаковым содержимым будут
различаться(использовать equals()), так как адреса будут разными, чем при втором.(StringTest_Create.java)
    * Для сравнения строк между собой, не учитывая регистр, используем equalsIgnoreCase()

    String is immutable
    В своей реализации String представляет private final массив типа char. Private не позволяет получить доступ к этому массиву,
final не позволяет изменить его даже если был получен доступ. Так, все методы класса String не изменяют объект, а лишь создают
новые объекты.

    String's methods представлены на скриншоте. Есть тонкости при использовании:
    * При указании в качестве аргументов индексов JVM может выбросить исключение IndexArrayOutOfBoundsException;
    * При использовании, например, substring(4, 6) последний символ с индексом 6 не берётся;
    * Вместо метода concat() часто используют оператор сложения. Можно складывать String с переменными других типов данных:
преобразуется в тип String за счёт вызова метода toString() преобразуемого класса. При сложении между собой других нестроковых
типов может выкинуть ошибку.