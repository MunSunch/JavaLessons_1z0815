    Method, в других языках программирования функция, описывает поведение класса. В свою очередь, поведение изменяет
состояние объекта. Метод состоит из модификатора доступа, ещё одного модификатора, типа возвращаемого значения,
идентификатора, аргумента/ов, тела метода(смотри StructureMethod.png). Указание последних четырёх элементов является
обязательным!(пример такого метода в Test5_1).
    Тип возвращаемого значения должен совпадать с типом возвращаемого значения. Возвращаемое значение указывается с
помощью ключевого слова "return". После return'а дальнейший код не исполняется, и при попытке написания компилятор
выдает ошибку Unreachable statement. Также метод может иметь return type void(вернуть ничего), например, метод что-то меняет
или печатает.
    For non-static method call нужно create instance class, используя constructor. Далее, через точку обратиться к методу.
    При вызове аргументы метода должны соответствовать параметрам, прописанным в класса. Параметры-это переменные, прописанные
в классе, аргументы - переменные либо значения, передаваемые при вызове методу.
    Метод может быть вложен в другие методы, тогда запуск и завершение методов регулируется правилом LIFO("Last in First out")
и представлены стеком. Метод попавший в стек последним запускается и завершается первым, затем убирается со стека. Так,
в Test5_1 в теле метода summa() вызывается метод show(). Получается, что show() попадает в стек последним и summa() не сможет
завершится пока не завершится show().
    Конструктор
    Конструктор используется для создания объекта класса, инициализировать instance var. Имя конструктора всегда имя класса.
            Имя_класса a = new Имя_класса();
    Если конструктор в классе не прописан, то компилятор сам создает default конструктор с пустым телом, который не принимает
никакие параметры.
            Default: Car(){}
    Если конструктор все же прописан, даже если он с пустым телом и не принимает параметры, то такой конструктор называется
User_defined(смотри Constructor.png).
    В отличие от метода конструктор ничего не возвращает, и имя всегда такое же как и имя класса(DifferenceBetweenC...).
